

밈
 - Life is short, You need Python.
 - 인생은 짧다 , 당신에겐 python이 필요하다.
 - python의 빠른 개발 속도와 생산성을 두고 개발자들 사이에서 유행처럼 퍼진 말.


개요
 - 1991년 개발됨.
 - 창시자: 네덜란드 프로그래머 "귀도 반 로섬(Guido van Rossum)"
 - 인터프리터 방식의 프로그래밍 언어
 - 이름의 유래: 귀도 반 로섬이 즐겨 보던 영국의 6인조 코미디 그룹 '몬티 python'에서 따옴.
 - Python Software Fund (파이썬 소프트웨어 재단)에서는 공식 문서로 PEP(Python 개선 제안) 문서를 아래 링크로 배포하고 있음.
 - PEP 공식 페이지 >> https://peps.python.org/


(잠깐) 인터프리터 방식이란?
 - 코드를 한 줄씩 읽어 내려가며 실행하는 프로그램
 - 컴파일러 방식과 대조.
 - 고급 프로그래밍 언어 중 대부분이 인터프리터 언어.
 - e.g.) MATLAB, Python, JavaScript, SQL, Python, Ruby, 스크래치 등
 

python 디자인 철학
 - "가장 아름다운 하나의 답이 존재한다."


2줄짜리 예시 코드)

def factorial(x):
	return 1 if x == 0 else x * factorial(x - 1)


pythonic한 코딩 스타일 19개명
 - 1) 아름다운 것이 추한 것보다 낫다. (Beautiful is better than ugly.)
 - 2) 명시적인 것이 암시적인 것보다 낫다. (Explicit is better than implicit.)
 - 3) 간결한 것이 복합적인 것보다 낫다. (Simple is better than complex.)
 - 4) 복합적인 것이 복잡한 것보다 낫다. (Complex is better than complicated.)
 - 5) 수평적인 것이 내포된 것보다 낫다. (Flat is better than nested.)
 - 6) 여유로운 것이 밀집한 것보다 낫다. (Sparse is better than dense.)
 - 7) 가독성은 중요하다. (Readability counts.)
 - 8) 특별한 경우들은 규칙을 어길 정도로 특별하지 않다. (Special cases aren't special enough to break the rules.)
 - 9) 허나 실용성은 순수성을 이긴다. (Although practicality beats purity.)
 - 10) 오류는 절대로 조용히 지나가지 않는다. (Errors should never pass silently.)
 - 11) 명시적으로 오류를 감추려는 의도가 아니라면. (Unless explicitly silenced.)
 - 12) 모호함을 대할 때, 이를 추측하려는 유혹을 거부하라. (In the face of ambiguity, refuse the temptation to guess.)
 - 13) 명확한, 그리고 가급적이면 유일한 하나의 방법은 항상 존재한다. (There should be one-- and preferably only one --obvious way to do it.)
 - 14) 비록 그 방법이 처음에는 명확해 보이지 않을지라도[10]. (Although that way may not be obvious at first unless you're Dutch.)
 - 15) 지금 행동에 옮기는 것이 아예 안 하는 것보다는 낫다. (Now is better than never.)
 - 16) 비록 아예 안 하는 것이 지금 *당장* 하는 것보다 나을 때도 많지만. (Although never is often better than *right* now.)
 - 17) 구현 결과를 설명하기 쉽지 않다면, 그것은 나쁜 아이디어이다. (If the implementation is hard to explain, it's a bad idea.)
 - 18) 구현 결과를 설명하기 쉽다면, 그것은 좋은 아이디어일지도 모른다. (If the implementation is easy to explain, it may be a good idea.)
 - 19) 네임스페이스를 사용하는 것은 완전 좋은 생각이다! (Namespaces are one honking great idea -- let's do more of those!)






References
 - https://namu.wiki/w/Python
 - https://namu.wiki/w/R(%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%20%EC%96%B8%EC%96%B4)
 - https://namu.wiki/w/%EC%9D%B8%ED%84%B0%ED%94%84%EB%A6%AC%ED%84%B0



